{"version":3,"sources":["Services/firebase/setup.js","App.js","serviceWorker.js","Component/Edit.js","Component/NavProyect.js","Component/RestoDia.js","Component/Desayuno.js","Component/Create.js","Component/Show.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","db","firestore","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCollectionUpdate","querySnapshot","boards","forEach","doc","_doc$data","data","title","description","author","push","key","id","setState","ref","collection","unsubscribe","state","onSnapshot","react_default","a","createElement","class","Link","to","map","board","concat","Component","Boolean","window","location","hostname","match","Edit","onChange","e","target","name","value","onSubmit","preventDefault","_this$state","set","then","docRef","history","params","catch","error","console","_this2","get","exists","log","for","type","placeholder","Navigation","className","RestoDia","restoDia","restoDiaArr","comidaDia","bind","assertThisInitialized","objectSpread","food","i","Card","style","width","Body","Title","item","Subtitle","tipo","Text","precio","Container","Row","Col","sm","onClick","Desayuno","desayuno","desayunoArr","comida","Create","add","_this$state2","NavProyect","Component_RestoDia","Component_Desayuno","Show","isLoading","_this3","delete","ReactDOM","render","BrowserRouter","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef4ec4f1.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/app';\nimport 'firebase/firestore';\n\n\nfirebase.initializeApp(\n{\n    apiKey: \"AIzaSyDMys9ZKjAjqF-CvzIOanDQGymvyn967Oo\",\n    authDomain: \"burger-queen-a674b.firebaseapp.com\",\n    databaseURL: \"https://burger-queen-a674b.firebaseio.com\",\n    projectId: \"burger-queen-a674b\",\n  });\n\nconst db = firebase.firestore();\nexport default db;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport db from './Services/firebase/setup';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = db.collection('boards');\n    this.unsubscribe = null;\n    this.state = {\n      boards: []\n    };\n  }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const boards = [];\n    querySnapshot.forEach((doc) => {\n      const { title, description, author } = doc.data();\n      boards.push({\n        key: doc.id,\n        doc, // DocumentSnapshot\n        title,\n        description,\n        author,\n      });\n    });\n    this.setState({\n      boards\n   });\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              Lista de Pedidos\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4><Link to=\"/create\"> Tomar Pedido</Link></h4>\n            <table class=\"table table-stripe\">\n              <thead>\n                <tr>\n                  <th>Cliente</th>\n                  <th>Pedido</th>\n                  <th>Precio</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.boards.map(board =>\n                  <tr>\n                    <td><Link to={`/show/${board.key}`}>{board.title}</Link></td>\n                    <td>{board.description}</td>\n                    <td>{board.author}</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n// //Dependencias\n// import React, { Component } from 'react';\n// // import { Link } from 'react-router-dom';\n\n\n// //CSS\n// import './App.css';\n\n\n// //Componentes\n// import Navigation from './Component/NavProyect';\n// import NameForm from './Component/NameForm';\n// import Desayuno from './Component/Desayuno';\n// import RestoDia from './Component/RestoDia';\n// // import Content from './Component/Content';\n\n\n\n// class App extends Component {\n\n//   render() {\n//     return (\n//       <div>\n//          < Navigation />\n//          <br></br>\n//           < NameForm/>\n//           < Desayuno /> \n//           < RestoDia />\n\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport db from '../Services/firebase/setup';\nimport { Link } from 'react-router-dom';\n\nclass Edit extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: '',\n      title: '',\n      description: '',\n      author: ''\n    };\n  }\n\n  componentDidMount() {\n    const ref = db.collection('boards').doc(this.props.match.params.id);\n    ref.get().then((doc) => {\n      if (doc.exists) {\n        const board = doc.data();\n        this.setState({\n          key: doc.id,\n          title: board.title,\n          description: board.description,\n          author: board.author\n        });\n      } else {\n        console.log(\"No such document!\");\n      }\n    });\n  }\n\n  onChange = (e) => {\n    const state = this.state\n    state[e.target.name] = e.target.value;\n    this.setState({board:state});\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { title, description, author } = this.state;\n\n    const updateRef = db.collection('boards').doc(this.state.key);\n    updateRef.set({\n      title,\n      description,\n      author\n    }).then((docRef) => {\n      this.setState({\n        key: '',\n        title: '',\n        description: '',\n        author: ''\n      });\n      this.props.history.push(\"/show/\"+this.props.match.params.id)\n    })\n    .catch((error) => {\n      console.error(\"Error adding document: \", error);\n    });\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              Editar Pedido\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4><Link to={`/show/${this.state.key}`} class=\"btn btn-primary\"> Lista de Pedidos </Link></h4>\n            <form onSubmit={this.onSubmit}>\n              <div class=\"form-group\">\n                <label for=\"title\">Cliente:</label>\n                <input type=\"text\" class=\"form-control\" name=\"title\" value={this.state.title} onChange={this.onChange} placeholder=\"Title\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"description\">Pedido:</label>\n                <input type=\"text\" class=\"form-control\" name=\"description\" value={this.state.description} onChange={this.onChange} placeholder=\"Description\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"author\">Precio:</label>\n                <input type=\"text\" class=\"form-control\" name=\"author\" value={this.state.author} onChange={this.onChange} placeholder=\"Author\" />\n              </div>\n              <button type=\"submit\" class=\"btn btn-success\">Editar </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Edit;","import React, { Component } from 'react';\nimport '../Css/nav.css';\n\nclass Navigation extends Component {\n    render () {\n        return (\n            <nav className=\"navPag\">\n            Burger Queen\n            </nav>\n        )\n    }\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport {restoDia} from '../Json/restoDia.json';\nimport {Card, Container,Row, Col} from 'react-bootstrap';\n\n\nclass RestoDia extends Component{\n    constructor(props){\n        super(props);\n        //this.state = el estado actual del componente\n        //agregamos constructor y super para cambiar el estado del componente\n        this.state={\n            restoDia,\n            restoDiaArr: []\n        }\n        // this= a este componente \n        //.bind = \"atale\", this (a este componente).comida.bind atale la función comida\n        this.comidaDia = this.comidaDia.bind(this);\n    }\n    comidaDia(){\n        //this.setState = el estado final de mi componente\n        this.setState({\n            ...this.state,\n            restoDiaArr: this.state.restoDia.map((food,i) => {\n                return(<button type='button' >\n                <Card style={{ width: '18rem' }}>\n                <Card.Body>\n                    <Card.Title> {food.item} </Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\"> {food.tipo}</Card.Subtitle>\n                    <Card.Text>\n                        {food.precio}\n                    </Card.Text>\n                    </Card.Body>\n                    </Card> </button>)\n            })\n        })\n    }\n    render(){\n        return(\n           <Container className= 'menuStyle'>\n            <Row className = 'Menu'>\n            <Col sm = \"6\">\n                <button type='button' className='btn btn-success' onClick={this.comidaDia}> Menu del día </button>\n                {this.state.restoDiaArr} \n              </Col>\n                </Row>\n           </Container>\n        )\n    }\n}\n\nexport default RestoDia;","import React, { Component } from 'react';\nimport {desayuno} from '../Json/desayuno.json'\nimport {Card, Container, Row, Col} from 'react-bootstrap';\n\n\nclass Desayuno extends Component{\n    constructor(props){\n        super(props);\n        //this.state = el estado actual del componente\n        //agregamos constructor y super para cambiar el estado del componente\n        this.state={\n            desayuno,\n            desayunoArr: [],\n        }\n        // this= a este componente \n        //.bind = \"atale\", this (a este componente).comida.bind atale la función comida\n        this.comida = this.comida.bind(this);\n    }\n    comida(){\n        //this.setState = el estado final de mi componente\n        this.setState({\n            ...this.state,\n            desayunoArr: this.state.desayuno.map((food,i) => {\n                return(<button type='button' >\n                    <Card style={{ width: '18rem' }}>\n                    <Card.Body>\n                     <Card.Title> {food.item} </Card.Title> \n                        <Card.Subtitle className=\"mb-2 text-muted\"> {food.precio} </Card.Subtitle>\n                    </Card.Body>\n                    </Card> </button> )\n            })\n        })\n    }\n    render(){\n        return(\n            <Container className = 'menuStyle'>\n            <Row className = 'Menu'>\n            <Col sm = \"6\">\n                <button type='button' className='btn btn-success' onClick={this.comida}>Desayuno</button>\n                {this.state.desayunoArr} \n                </Col>\n            </Row>\n        </Container>\n        )\n    }\n}\n\nexport default Desayuno;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport db from '../Services/firebase/setup';\nimport { Link } from 'react-router-dom';\nimport Navigation from '../Component/NavProyect';\nimport RestoDia from '../Component/RestoDia';\nimport Desayuno from '../Component/Desayuno';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass Create extends Component {\n\n  constructor() {\n    super();\n    this.ref = db.collection('boards');\n    this.state = {\n      title: '',\n      description: '',\n      author: ''\n    };\n  }\n  onChange = (e) => {\n    const state = this.state\n    state[e.target.name] = e.target.value;\n    this.setState(state);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { title, description, author } = this.state;\n\n    this.ref.add({\n      title,\n      description,\n      author\n    }).then((docRef) => {\n      this.setState({\n        title: '',\n        description: '',\n        author: ''\n      });\n      this.props.history.push(\"/\")\n    })\n    .catch((error) => {\n      console.error(\"Error adding document: \", error);\n    });\n  }\n\n  render() {\n    const { title, description, author } = this.state;\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              < Navigation />\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4><Link to=\"/\" class=\"btn btn-primary\"> Lista de Pedidos </Link></h4>\n            <form onSubmit={this.onSubmit}>\n              <div class=\"form-group\">\n                <label for=\"title\">Cliente:</label>\n                <input type=\"text\" class=\"form-control\" name=\"title\" value={title} onChange={this.onChange} placeholder=\"Nombre del Cliente\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"description\">Pedido:</label>\n                <Container className = 'menuStyle'>\n            <Row className = 'Menu'>\n            <Col sm = \"6\">\n             < RestoDia />\n             </Col>\n             <Col sm = \"6\">\n                <Desayuno  onChange= {this.onChange} value= {description} />\n               {/* <textArea class=\"form-control\" name=\"description\" onChange={this.onChange} placeholder=\"Pedido\" cols=\"80\" rows=\"3\">{description}</textArea> */}\n               </Col>\n            </Row>\n           </Container>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"author\">Precio:</label>\n                <input type=\"text\" class=\"form-control\" name=\"author\" value={author} onChange={this.onChange} placeholder=\"Total\" />\n              </div>\n              <button type=\"submit\" class=\"btn btn-success\">Agregar Pedido</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Create;","import React, { Component } from 'react';\nimport db from '../Services/firebase/setup';\nimport { Link } from 'react-router-dom';\n\nclass Show extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: {},\n      key: ''\n    };\n  }\n\n  componentDidMount() {\n    const ref = db.collection('boards').doc(this.props.match.params.id);\n    ref.get().then((doc) => {\n      if (doc.exists) {\n        this.setState({\n          board: doc.data(),\n          key: doc.id,\n          isLoading: false\n        });\n      } else {\n        console.log(\"No such document!\");\n      }\n    });\n  }\n\n  delete(id){\n    db.collection('boards').doc(id).delete().then(() => {\n      console.log(\"Document successfully deleted!\");\n      this.props.history.push(\"/\")\n    }).catch((error) => {\n      console.error(\"Error removing document: \", error);\n    });\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n          <h4><Link to=\"/\"> Listas de Pedidos</Link></h4>\n            <h3 class=\"panel-title\">\n              {this.state.board.title}\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <dl>\n              <dt>Pedido:</dt>\n              <dd>{this.state.board.description}</dd>\n              <dt>Precio:</dt>\n              <dd>{this.state.board.author}</dd>\n            </dl>\n            <Link to={`/edit/${this.state.key}`} class=\"btn btn-success\">Editar Pedido</Link>&nbsp;\n            <button onClick={this.delete.bind(this, this.state.key)} class=\"btn btn-danger\"> Eliminar Pedido</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Show;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Edit from './Component/Edit';\nimport Create from './Component/Create';\nimport Show from './Component/Show';\n\nReactDOM.render(\n  <Router>\n      <div>\n        <Route exact path='/' component={App} />\n        <Route path='/edit/:id' component={Edit} />\n        <Route path='/create' component={Create} />\n        <Route path='/show/:id' component={Show} />\n      </div>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}